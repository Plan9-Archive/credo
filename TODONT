Don't move output and intermediate do files to a (hidden) subdirectory
for credo.  One design purpose of credo is to provide to other tools
an interface to the information the build tool uses to make decisions,
so this information is not hidden by or specific only to credo.
To get source code from another directory, use the shell variable credir.

Don't add redo-* commands to the do scripts.¹  They are a source of
complexity,² and they hide the internal mechanisms and information the
build tool uses to decide what to do.³  Credo instead uses *.dep files
to record file-level dependencies.  In addition, dodep assumes as much
dependency information, for each type of file production, as it can
without being annoyingly wrong.  It expects higher-level scripts to
use other tools in the suite⁴ to program remaining dependencies, and
set values of shell variables specific to the environment.⁵
 ¹ This is the primary difference between credo and redo.
 ² I think that as a whole, their level of abstraction and usage is
complex enough to prevent automatically generating the build system.
It doesn’t help much to have a system just as complex and hand-
written, only divided into smaller files.
 ³ A primary design purpose of credo is to get rid of hand-written
build descriptions (e.g. make files).
 ⁴ For example, adddep, rmdep, addenv, and rmenv.
 ⁵ For example, $cc stores the path to the C compiler on a particular
build machine.  $cflags records the compiler flags used while
producing object files from a specific set of source code files.

Don’t capture the standard output of a do script as the content of
the new file.  This is another difference between credo and redo.
Credo expects each do file $target.do to create a file $target,
but leaves it up to the do script to create it, and assumes nothing
about its file descriptors.  Credo relays standard output and standard
error to the controlling terminal, and presents nothing on standard
input to the do script.  Credo does provide one parameter to the do
script, the name of the target to create.  Do scripts can be shell
scripts or programs, credo doesn’t care.
